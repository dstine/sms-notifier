buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'java'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
        vendor = JvmVendorSpec.AMAZON
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.apache.commons:commons-email:1.5'

    implementation 'com.amazonaws:aws-lambda-java-core:1.1.0'
    implementation 'com.amazonaws:aws-lambda-java-events:1.1.0'

    implementation 'com.amazonaws:aws-java-sdk-cloudwatch:1.11.292'

    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'

    testImplementation 'junit:junit:4.12'
}

wrapper {
  gradleVersion = '6.2.1'
}

// Create zip suitable for deployment to Lambda
task buildZip(type: Zip) {
    from compileJava
    from processResources              
    into('lib') {
        from configurations.runtimeClasspath
    }           
}

build.dependsOn buildZip

// Propeties in CAPITALS set in GRADLE_USER_HOME/gradle.properties

// Task to test sending
task sendEmail(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.github.dstine.sms.EmailSender'

    environment 'SMTP_HOST', findProperty('SMTP_HOST')
    environment 'SMTP_USERNAME', findProperty('SMTP_USERNAME')
    environment 'SMTP_PASSWORD', findProperty('SMTP_PASSWORD')
    environment 'EMAIL_FROM', findProperty('EMAIL_FROM')
    environment 'EMAIL_SUBJECT', findProperty('EMAIL_SUBJECT')
    environment 'EMAIL_MSG_FORMAT', findProperty('EMAIL_MSG_FORMAT')
    environment 'EMAIL_TO', findProperty('EMAIL_TO')
}

// TODO: task to test lambda invocation with SAM Local

